// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums for predefined values
enum UserRole {
  Student
  Admin
}

enum FocusSessionStatus {
  Active
  Paused
  Complete
}

enum RewardType {
  FocusNovice
  ConsistencyKing
  ProductivityMaster
  TimeManagementExpert
  FocusChampion
  HabitBuilder
  GoalGetter
  EfficiencyGuru
}

// Updated Schema
model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  password     String
  avatarUrl    String?  @default("https://i.pinimg.com/280x280_RS/e1/08/21/e10821c74b533d465ba888ea66daa30f.jpg")
  role         UserRole @default(Student)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  focusSessions FocusSession[]
  rewards       Rewards[]
}

model FocusSession {
  id            Int                @id @default(autoincrement())
  userId        Int
  focusDuration Int
  breakDuration Int
  startedAt     DateTime
  pausedAt      DateTime?
  resumedAt     DateTime?
  endedAt       DateTime?
  status        FocusSessionStatus @default(Active)
  totalPausedTime Int             @default(0)
  isComplete    Boolean            @default(false)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt

  // Relation
  user          User               @relation(fields: [userId], references: [id])
}

model Rewards {
  id         Int          @id @default(autoincrement())
  userId     Int
  rewardType RewardType
  details    String?
  createdAt  DateTime     @default(now())

  // Relation with the User model
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}


